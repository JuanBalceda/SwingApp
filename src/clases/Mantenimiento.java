/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clases;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jbalceda
 */
public class Mantenimiento extends javax.swing.JFrame {

    Connection c;
    Statement s;
    ResultSet rs;
    DefaultTableModel tableModel = new DefaultTableModel();

    /**
     * Creates new form Mantenimiento
     */
    public Mantenimiento() {
        initComponents();
        initTable();
        c = Libreria.conexion(c);
        s = Libreria.sentencia(s);
        rs = Libreria.consulta(rs);
        txtApellido.setEnabled(false);
        txtNombre.setEnabled(false);
        btnBuscar.setEnabled(true);
        btnMostrar.setEnabled(true);
        btnNuevo.setEnabled(true);
        btnGrabar.setEnabled(false);
        btnActualizar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnCancelar.setEnabled(false);
        btnDelete.setEnabled(false);
    }

    public void initTable() {
        String titulos[] = {"Código", "Apellidos", "Nombres", "Matricula"};
        tableModel.setColumnIdentifiers(titulos);
        tblAlumnos.setModel(tableModel);
    }

    public void limpiar() {
        txtCodigo.setText("");
        txtApellido.setText("");
        txtNombre.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAlumnos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnMostrar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnGrabar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Registro de Alumnos"));

        jLabel2.setText("Nombres:");

        jLabel3.setText("Apellidos:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtApellido)
                    .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Reporte de Alumnos"));

        tblAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Codigo", "Apellidos", "Nombres", "Matricula"
            }
        ));
        jScrollPane1.setViewportView(tblAlumnos);

        jLabel1.setText("Código:");

        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnMostrar.setText("Mostrar Todos");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMostrar)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(btnMostrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Mantenimiento"));

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGrabar.setText("Grabar");
        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 0, 0));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNuevo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGrabar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnActualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnGrabar)
                    .addComponent(btnActualizar)
                    .addComponent(btnEliminar)
                    .addComponent(btnCancelar)
                    .addComponent(btnDelete)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed
        if (txtApellido.getText().length() > 0 && txtNombre.getText().length() > 0) {
            int resp = JOptionPane.showConfirmDialog(this, "Desea guardar el registro?", "BALCEDA", 0);
            if (resp == 0) {
                try {
                    String apellido, nombre, comando;
                    apellido = txtApellido.getText();
                    nombre = txtNombre.getText();
                    comando = "INSERT INTO alumnos(apellidos, nombres, matricula) VALUES";
                    comando = comando + "('" + apellido + "', '" + nombre + "', 1)";
                    s.executeUpdate(comando);
                    c.close();
                    limpiar();
                    JOptionPane.showMessageDialog(this, "Registro correcto");
                } catch (SQLException e) {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(this, "Error al registrar");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese nombres y apellidos.");
        }
    }//GEN-LAST:event_btnGrabarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        limpiar();
        limpiarTabla();
        txtCodigo.setEnabled(false);
        txtApellido.setEnabled(true);
        txtNombre.setEnabled(true);
        txtApellido.requestFocus();

        btnBuscar.setEnabled(false);
        btnMostrar.setEnabled(false);
        btnNuevo.setEnabled(false);
        btnGrabar.setEnabled(true);
        btnActualizar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnCancelar.setEnabled(true);
        btnDelete.setEnabled(false);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        try {
            limpiar();
            rs = Libreria.consulta(rs);
            limpiarTabla();
            poblarTabla();
            txtCodigo.setEnabled(true);
            txtNombre.setEnabled(false);
            txtApellido.setEnabled(false);

            btnBuscar.setEnabled(true);
            btnMostrar.setEnabled(true);
            btnNuevo.setEnabled(true);
            btnGrabar.setEnabled(false);
            btnActualizar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnCancelar.setEnabled(false);
            btnDelete.setEnabled(false);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error en la consulta");
        }
    }//GEN-LAST:event_btnMostrarActionPerformed

    public void poblarTabla() throws SQLException {
        String datos[] = new String[4];
        while (rs.next()) {
            datos[0] = rs.getString(1);
            datos[1] = rs.getString(2);
            datos[2] = rs.getString(3);
            datos[3] = rs.getString(4);
            tableModel.addRow(datos);
        }
    }

    public void limpiarTabla() {
        int i, f;
        f = tableModel.getRowCount();
        if (f > 0) {
            for (i = 0; i < f; i++) {
                tableModel.removeRow(0);
            }
        }
    }

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (txtCodigo.getText().length() > 0) {
            limpiarTabla();
            try {
                String codigo, comando;
                codigo = txtCodigo.getText();
                comando = "SELECT * FROM alumnos WHERE codigo = " + codigo;
                rs = s.executeQuery(comando);
                String datos[] = new String[4];
                if (rs.next()) {
                    if (codigo.equals(rs.getString(1))) {
                        txtNombre.setEnabled(true);
                        txtApellido.setEnabled(true);
                        txtNombre.setText(rs.getString(3));
                        txtApellido.setText(rs.getString(2));
                        datos[0] = rs.getString(1);
                        datos[1] = rs.getString(2);
                        datos[2] = rs.getString(3);
                        datos[3] = rs.getString(4);
                        tableModel.addRow(datos);
                        btnGrabar.setEnabled(false);
                        btnActualizar.setEnabled(true);
                        btnEliminar.setEnabled(true);
                        btnDelete.setEnabled(true);
                        btnCancelar.setEnabled(true);

                        btnBuscar.setEnabled(true);
                        btnMostrar.setEnabled(true);
                        btnNuevo.setEnabled(true);
                        btnGrabar.setEnabled(false);
                        btnActualizar.setEnabled(true);
                        btnEliminar.setEnabled(true);
                        btnCancelar.setEnabled(true);
                        btnDelete.setEnabled(true);

                    }
                } else {
                    limpiar();
                    txtNombre.setEnabled(false);
                    txtApellido.setEnabled(false);
                    
                    btnBuscar.setEnabled(true);
                    btnMostrar.setEnabled(true);
                    btnNuevo.setEnabled(true);
                    btnGrabar.setEnabled(false);
                    btnActualizar.setEnabled(false);
                    btnEliminar.setEnabled(false);
                    btnCancelar.setEnabled(false);
                    btnDelete.setEnabled(false);
                    
                    JOptionPane.showMessageDialog(this, "El código no fue encontrado.");
                    txtCodigo.requestFocus();
                }
                c.close();
            } catch (SQLException e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(this, "Error al buscar");
                txtCodigo.requestFocus();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese un código.");
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        if (txtApellido.getText().length() > 0 && txtNombre.getText().length() > 0 && txtCodigo.getText().length() > 0) {
            int resp = JOptionPane.showConfirmDialog(this, "Desea actualizar el registro?", "BALCEDA", 0);
            if (resp == 0) {
                try {
                    int cod;
                    String apellido, nombre, comando;
                    apellido = txtApellido.getText();
                    nombre = txtNombre.getText();
                    cod = Integer.parseInt(txtCodigo.getText());
                    comando = "UPDATE alumnos SET nombres='" + nombre + "',"
                            + " apellidos='" + apellido + "'"
                            + " WHERE codigo=" + String.valueOf(cod);
                    s.executeUpdate(comando);
                    c.close();
                    limpiar();

                    limpiarTabla();
                    txtNombre.setEnabled(false);
                    txtApellido.setEnabled(false);

                    btnBuscar.setEnabled(true);
                    btnMostrar.setEnabled(true);
                    btnNuevo.setEnabled(true);
                    btnGrabar.setEnabled(false);
                    btnActualizar.setEnabled(false);
                    btnEliminar.setEnabled(false);
                    btnCancelar.setEnabled(false);
                    btnDelete.setEnabled(false);
                    JOptionPane.showMessageDialog(this, "Actualización correcta");
                } catch (SQLException e) {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(this, "Error al actualizar");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese nombres y apellidos.");
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (txtCodigo.getText().length() > 0) {
            int resp = JOptionPane.showConfirmDialog(this, "Desea eliminar el registro?", "BALCEDA", 0);
            if (resp == 0) {
                try {
                    int cod;
                    String comando;
                    cod = Integer.parseInt(txtCodigo.getText());
                    comando = "UPDATE alumnos SET matricula=0"
                            + " WHERE codigo=" + String.valueOf(cod);
                    s.executeUpdate(comando);
                    c.close();
                    limpiar();
                    limpiarTabla();

                    limpiarTabla();
                    txtNombre.setEnabled(false);
                    txtApellido.setEnabled(false);

                    btnBuscar.setEnabled(true);
                    btnMostrar.setEnabled(true);
                    btnNuevo.setEnabled(true);
                    btnGrabar.setEnabled(false);
                    btnActualizar.setEnabled(false);
                    btnEliminar.setEnabled(false);
                    btnCancelar.setEnabled(false);
                    btnDelete.setEnabled(false);
                    JOptionPane.showMessageDialog(this, "Eliminación correcta");
                } catch (SQLException e) {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(this, "Error al eliminar");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese el código del registro a eliminar.");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        int resp = JOptionPane.showConfirmDialog(this, "Desea cancelar?", "BALCEDA", 0);
        if (resp == 0) {
            limpiar();
            limpiarTabla();
            txtCodigo.setEnabled(true);
            txtNombre.setEnabled(false);
            txtApellido.setEnabled(false);

            limpiarTabla();
            txtNombre.setEnabled(false);
            txtApellido.setEnabled(false);

            btnBuscar.setEnabled(true);
            btnMostrar.setEnabled(true);
            btnNuevo.setEnabled(true);
            btnGrabar.setEnabled(false);
            btnActualizar.setEnabled(false);
            btnEliminar.setEnabled(false);
            btnCancelar.setEnabled(false);
            btnDelete.setEnabled(false);
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (txtCodigo.getText().length() > 0) {
            int resp = JOptionPane.showConfirmDialog(this, "Desea eliminar el registro?", "BALCEDA", 0);
            if (resp == 0) {
                try {
                    int cod;
                    String comando;
                    cod = Integer.parseInt(txtCodigo.getText());
                    comando = "DELETE FROM alumnos WHERE codigo=" + String.valueOf(cod);
                    s.executeUpdate(comando);
                    c.close();
                    limpiar();

                    limpiarTabla();
                    txtNombre.setEnabled(false);
                    txtApellido.setEnabled(false);

                    btnBuscar.setEnabled(true);
                    btnMostrar.setEnabled(true);
                    btnNuevo.setEnabled(true);
                    btnGrabar.setEnabled(false);
                    btnActualizar.setEnabled(false);
                    btnEliminar.setEnabled(false);
                    btnCancelar.setEnabled(false);
                    btnDelete.setEnabled(false);
                    JOptionPane.showMessageDialog(this, "Eliminación correcta");
                } catch (SQLException e) {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(this, "Error al eliminar");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese el código del registro a eliminar.");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mantenimiento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mantenimiento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGrabar;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAlumnos;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
